<?php

/**
 * Implements hook_form_alter().
 *
 * Adds the action and redirect fields. Used by node type edit and node edit forms.
 */
function node_save_redirect_form_alter(&$form, &$form_state, $form_id) {
  if (isset($form['#node_type'])) {

    // Add the new radio buttons to the submission vertical tab.
    $form['submission']['node_save_redirect'] = array(
      '#type' => 'radios',
      '#title' => t('Redirect after content creation'),
      '#options' => array(
        0 => t('Default'),
        1 => t('Return to Edit page after saving.'),
        2 => t('Return to Content Overview after saving.'),
        4 => t('Re-direct to My Workbench after saving'),
        3 => t('Re-direct to another location')
      ),
      '#description' => t('Choose where the user should be sent after creating new content.'),
      '#default_value' => variable_get('node_save_redirect_' . $form['#node_type']->type, 0),
    );

    // Add a text field to the submission vertical tab.
    $form['submission']['node_save_redirect_location'] = array(
      '#type' => 'textfield',
      '#title' => t('Custom Redirect Location'),
      '#default_value' => variable_get('node_save_redirect_location_' . $form['#node_type']->type, ''),
      '#states' => array(
        'visible' => array(
          ':input[name="node_save_redirect"]' => array('value' => '3'),
        ),
      ),
    );

  // Add a custom submit handler for saving the form settings.
  $form['#submit'][] = 'node_save_redirect_form_submit';
  }

  if (strstr($form_id, '_node_form')) {
    $form['actions']['submit']['#submit'][] = 'node_save_redirect_submit';
  }
}

/**
 * Custom submit handler to save form settings.
 */
function node_save_redirect_form_submit($form, &$form_state) {
  $node_type = $form['#node_type']->type;

  // Save the selected redirect option.
  $redirect_value = $form_state['values']['node_save_redirect'];
  variable_set('node_save_redirect_' . $node_type, $redirect_value);

  // Save the custom redirect location if provided.
  $custom_location_value = $form_state['values']['node_save_redirect_location'];
  variable_set('node_save_redirect_location_' . $node_type, $custom_location_value);
}

/**
 * Submit handler for node form submission to handle redirects.
 */
function node_save_redirect_submit($form, &$form_state) {
  // Load settings.
  $node_save_redirect_settings = variable_get('node_save_redirect_' . $form['type']['#value'], 0);
  $custom_location = variable_get('node_save_redirect_location_' . $form['type']['#value'], '');

  if ($node_save_redirect_settings !== NULL) {
    // A destination in $_GET always overrides the function arguments. @see backdrop_goto
    unset($_GET['destination']);

    if ($node_save_redirect_settings == '1') {
      $form_state['redirect'] = 'node/' . $form_state['nid'] . '/edit';
    }
    elseif ($node_save_redirect_settings == '2' && user_access('access content overview')) {
      $form_state['redirect'] = 'admin/content';
    }
    elseif ($node_save_redirect_settings == '4' && user_access('access workbench')) {
      $form_state['redirect'] = 'admin/workbench';
    }
    elseif ($node_save_redirect_settings == '3' && !empty($custom_location)) {
      // Parse and apply the custom redirect location.
      $options = backdrop_parse_url($custom_location);
      $form_state['redirect'] = array(
        $options['path'],
        array(
        'query' => isset($options['query']) ? $options['query'] : array(),
        'fragment' => isset($options['fragment']) ? $options['fragment'] : '',
      )
    );
    }
  }
}
